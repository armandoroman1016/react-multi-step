{"version":3,"file":"index.js","sources":["../src/utils/createCtx.tsx","../src/Contexts/FormContext.ts","../src/utils/useMultiStep.tsx","../src/Components/Controls.tsx","../src/Components/ProgressBar.tsx","../src/Components/FormStep.tsx","../src/Components/FormCarousel.tsx","../src/Components/FormContainer.tsx","../src/Components/MultiStep.tsx"],"sourcesContent":["import * as React from \"react\";\n\nexport function createCtx<T>(defaultValue: T) {\n    type UpdateType = React.Dispatch<React.SetStateAction<typeof defaultValue>>;\n\n    const defaultUpdate: UpdateType = () => defaultValue;\n\n    const ctx = React.createContext({\n        state: defaultValue,\n        update: defaultUpdate,\n    });\n\n    function Provider(props: React.PropsWithChildren<Record<string, unknown>>) {\n        const [state, update] = React.useState(defaultValue);\n\n        return <ctx.Provider value={{ state, update }} {...props} />;\n    }\n\n    return [ctx, Provider] as const;\n}\n","import { createCtx } from \"../utils/createCtx\";\n\nexport interface FormContext {\n    inputFields: Record<string, unknown>;\n    currentPosition: number;\n    maxPosition: number;\n    currentForm?: React.ComponentType;\n    allowNext: boolean;\n    allowSubmission: boolean;\n    onNext: () => void;\n    onComplete: () => Record<string, unknown>;\n    updateFormValues: (fieldName: string, fieldValue: string) => void;\n    errors: boolean;\n    stepNames: string[];\n    addStepName: (stepName: string) => void;\n    complete: boolean;\n}\n\nlet ctx: FormContext = {\n    inputFields: {},\n    currentPosition: 0,\n    maxPosition: 0,\n    allowNext: true,\n    allowSubmission: true,\n    errors: false,\n    complete: false,\n    onNext(continueWithoutFieldFufillment = true) {\n        this.allowNext = continueWithoutFieldFufillment;\n    },\n    onComplete() {\n        this.complete = true;\n        return this.inputFields;\n    },\n    updateFormValues(fieldName, fieldValue) {\n        this.inputFields = { ...this.inputFields, [fieldName]: fieldValue };\n    },\n    stepNames: [],\n    addStepName(stepName) {\n        this.stepNames.push(stepName);\n    }\n}\n\nconst [formCtx, FormProvider] = createCtx<FormContext>(ctx);\n\nexport { formCtx, FormProvider };\n","import { useContext } from \"react\";\nimport { formCtx } from \"../Contexts/FormContext\";\n\nexport const useMultiStep = () => {\n    const { state, update } = useContext(formCtx);\n    return { stepForm: state, updateMultiStep: update };\n};\n","import * as React from \"react\";\nimport * as CSS from \"csstype\";\nimport { useMultiStep } from \"../utils/useMultiStep\";\n\nimport styled from \"styled-components\";\n\ninterface ControlButtons {\n    prev: typeof React.Component\n    next: typeof React.Component\n}\ninterface ControlProps {\n    buttonStyles?: CSS.Properties;\n    submitFunction?: React.MouseEventHandler<HTMLButtonElement>;\n    controls?: ControlButtons\n    prevButtonText?: string;\n    nextButtonText?: string;\n}\n\nconst Button = styled.button<ControlProps>`\n    border-radius: 4px;\n    border: none;\n    padding: 8px 10px;\n    background: #5c8ef2;\n    color: #fff;\n    cursor: pointer;\n    width: 150px;\n    margin-bottom: 12px;\n`;\n\nconst Container = styled.div<ControlProps>`\n    display: flex;\n    width: 100%;\n    flex-direction: column;\n    align-items: center;\n`;\n\nconst Controls = (props: ControlProps) => {\n    const { buttonStyles, controls, prevButtonText, nextButtonText } = props;\n\n    const { stepForm, updateMultiStep } = useMultiStep();\n    const { currentPosition, maxPosition } = stepForm;\n\n    const toggleSteps = (command: \"increment\" | \"decrement\") => {\n        // increment step\n        if (command === \"increment\") {\n            if (currentPosition < maxPosition) updateMultiStep({ ...stepForm, currentPosition: currentPosition + 1 });\n        }\n        // decrement step\n        else if (command === \"decrement\") {\n            if (currentPosition > 0) updateMultiStep({ ...stepForm, currentPosition: (stepForm.currentPosition -= 1) });\n        }\n    };\n\n    const useButton = (direction: \"decrement\" | \"increment\", buttonText?: string) => {\n\n        // rendering users custom controls, passing a toggle steps fn that the user must call on for functionality\n        let Prev\n        let Next\n        if(controls){\n            Prev = controls.prev\n            Next = controls.next\n        }\n        if(Prev && direction === \"decrement\") return <Prev toggleSteps={() => toggleSteps(direction)} />\n        if(Next && direction === \"increment\") return <Next toggleSteps={() => toggleSteps(direction)} />\n        \n        // default controls\n        let defaultText = direction === \"decrement\" ? \"Previous\" : \"Next\"\n        return <Button style={buttonStyles} onClick={() => toggleSteps(direction)}>\n                {buttonText || defaultText}\n                </Button>\n    }\n\n    return (\n        <Container>\n            {currentPosition > 0 && useButton(\"decrement\", prevButtonText)}\n            {currentPosition < maxPosition && useButton(\"increment\", nextButtonText)}\n        </Container>\n    );\n};\n\nexport default Controls;\n","import * as React from \"react\";\nimport \"./ProgressBar.scss\";\nimport { useMultiStep } from \"../utils/useMultiStep\";\n\nconst ProgressBar = () => {\n    const { stepForm, updateMultiStep } = useMultiStep();\n    const {  stepNames, maxPosition, currentPosition} = stepForm;\n    \n    const goToStep = (selectedIdx: number) => {\n        if(currentPosition > selectedIdx){\n            updateMultiStep({...stepForm, currentPosition: selectedIdx})\n        }\n    }\n\n    const getClass = (idx: number) => {\n        let str = \"\"\n        if(idx === 0) str += \"first\"\n        if (currentPosition === idx) return str + \" current\";\n        if (currentPosition > idx || currentPosition === maxPosition) return str + \" completed\";\n        return str + \"uncomplete\";\n    };\n\n    return (\n        <div className = 'progress-container'>\n            {stepNames && stepNames.map((name, idx) => {\n                return (\n                    <div key = {idx} className='progress-step' style={{width: `${100 / (maxPosition + 1)}%`}}>\n                        <div className=\"step-wrapper\">\n                            <div onClick={() => goToStep(idx)} className = {'step-idx ' + getClass(idx)}>{idx < currentPosition ? <span>&#10003;</span> : idx + 1}</div>\n                            <div className = 'step-label'>{name}</div>\n                        </div>\n                    </div>\n                )\n            })}\n        </div>\n    );\n};\n\nexport default ProgressBar;\n","import * as React from \"react\";\nimport { useMultiStep } from \"../utils/useMultiStep\";\nimport \"./FormStep.scss\";\n\nexport interface FormStepProps {\n    component: React.ComponentType;\n    stepIndex: number;\n}\n\nconst FormStep = (props: FormStepProps) => {\n    const { component: Component, stepIndex } = props;\n\n    const { stepForm, updateMultiStep } = useMultiStep();\n    const { currentPosition, maxPosition } = stepForm;\n\n    const checkForEnter = (e: React.KeyboardEvent) => {\n        if (e.key === \"Enter\") {\n            if (currentPosition < maxPosition) updateMultiStep({ ...stepForm, currentPosition: currentPosition + 1 });\n        }\n    };\n\n    return (\n        <div className={currentPosition === stepIndex ? \"form-step active\" : \"form-step\"} onKeyDown={checkForEnter}>\n            <Component />\n        </div>\n    );\n};\n\nexport default FormStep;\n","import * as React from \"react\";\nimport { useMultiStep } from \"../utils/useMultiStep\";\nimport FormStep from \"./FormStep\";\n\ninterface Props {\n    nu?: number;\n    steps: any[];\n}\n\nconst { useEffect, useRef, useState } = React;\n\nexport const FormCarousel = (props: Props) => {\n    const { steps } = props;\n    const { stepForm } = useMultiStep();\n    const { currentPosition } = stepForm;\n\n    const stepRef = useRef<HTMLDivElement | null>(null);\n\n    const [carouselWidth, setCarouselWidth] = useState<number>(0)\n\n    // carousel\n    useEffect(() => {\n        if(carouselWidth === 0 && stepRef?.current){\n            setCarouselWidth(stepRef.current.clientWidth) \n        }\n        if (stepRef?.current) {\n            const n = stepRef.current.children;\n            if (n.length < 1) return;\n            let carouselPosition = carouselWidth * stepForm.currentPosition\n            stepRef.current.style.transform = `translateX(-${carouselPosition}px)`;\n            stepRef.current.style.transition = \"transform .6s cubic-bezier(.62,.23,.27,1.44)\";\n        }\n    }, [stepRef, currentPosition, carouselWidth]);\n\n    useEffect(() => {\n        function moveCarousel(){\n            if(stepRef.current) setCarouselWidth(stepRef.current.clientWidth) \n        }\n\n        window.addEventListener(\"resize\", moveCarousel)\n\n        return () => {\n            window.removeEventListener(\"resize\", moveCarousel)\n        }\n    },[])\n\n    return (\n        <div className=\"steps-carousel\">\n            <div ref={stepRef} className=\"inner\">\n                {steps &&\n                    steps.map(({ component: Step }, idx) => {\n                        return <FormStep component={Step} stepIndex={idx} key={idx} />;\n                    })}\n            </div>\n        </div>\n    );\n};\n","import * as React from \"react\";\nimport * as CSS from \"csstype\";\nimport styled from \"styled-components\";\n\nimport Controls from \"./Controls\";\nimport ProgressBar from \"./ProgressBar\";\n\nimport { useMultiStep } from \"../utils/useMultiStep\";\nimport { FormCarousel } from \"./FormCarousel\";\n\nconst { useEffect } = React;\ninterface Step {\n    component: React.ComponentType;\n    name: string;\n}\ninterface FormContainerProps {\n    heading?: string;\n    progressBar?: boolean;\n    styles?: CSS.Properties;\n    children?: React.ReactNode;\n    steps: Step[];\n}\n\nconst Container = styled.div`\n    width: 100%;\n    height: 100%;\n    display: flex;\n    flex-direction: column;\n    justify-content: space-between;\n`;\n\nconst FormContainer = ({styles, steps, children }: FormContainerProps) => {\n\n    const { stepForm, updateMultiStep } = useMultiStep();\n\n    useEffect(() => {\n        if (steps) {\n            const maxPosition = steps.length - 1;\n            updateMultiStep({ ...stepForm, maxPosition });\n            steps.forEach((step) => stepForm.addStepName(step.name));\n        }\n    }, [steps, updateMultiStep]);\n\n    return (\n        <Container style={styles}>\n            <ProgressBar />\n            <FormCarousel steps={steps} />\n            {!React.Children.count(children) && <Controls />}\n            {children}\n        </Container>\n    );\n};\n\nexport default FormContainer;\n","import * as React from \"react\";\nimport FormContainer from \"./FormContainer\";\nimport { FormProvider } from \"../Contexts/FormContext\";\nimport * as CSS from \"csstype\";\nimport { NonEmptyArray, Step } from \"../utils/types\";\n\ninterface MultiStepProps {\n    heading?: string;\n    progressBar?: boolean;\n    styles?: CSS.Properties;\n    children?: React.ReactNode;\n    steps: NonEmptyArray<Step>;\n}\n\nconst MultiStep = (props: MultiStepProps) => {\n\n    const {children} = props\n    \n    return (\n        <React.Fragment>\n            <FormProvider>\n                <FormContainer steps={props.steps} children = {children}/>\n            </FormProvider>\n        </React.Fragment>\n    );\n};\n\nexport default MultiStep;\n"],"names":["React.createContext","React.useState","React.createElement","useContext","styled","React.useEffect","React.useRef","useEffect","Container","React.Children","React.Fragment"],"mappings":"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"}